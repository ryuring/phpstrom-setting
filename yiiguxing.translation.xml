<application>
  <component name="AppStorage">
    <option name="newTranslationDialogX" value="2494" />
    <option name="newTranslationDialogY" value="485" />
    <option name="pinTranslationDialog" value="true" />
    <histories>
      <item value="Ensure you have loaded the `FormProtectionComponent`" />
      <item value="Instructions" />
      <item value="constraint" />
      <item value="describe" />
      <item value="Human name giving to this particular instance. Multiple objects representing the same database table can exist by using different aliases." />
      <item value="No builder-&gt;applyMiddleware() here." />
      <item value="complete" />
      <item value="Internally redirects one action to another. Does not perform another HTTP request unlike Controller::redirect()" />
      <item value="Refactor your code use `redirect()` instead of forwarding actions." />
      <item value="Extends the built-in DateTime class to provide handy methods and locale-aware formatting helpers" />
      <item value="Whether to execute the worker inside a database transaction." />
      <item value="Sets whether the records on the target table are dependent on the source table." />
      <item value="Set the names of parameters that will be converted into passed parameters" />
      <item value="The `{prefix}` prefix did not start with an upper case character. &quot; . 'Routing prefixes should be defined as CamelCase values. ' . 'Prefix inflection will be removed in 5.0" />
      <item value="Auxiliary function used to automatically alter the value of both the left and right columns by a certain amount that match the passed conditions" />
      <item value="Will soft delete the entity provided. Will remove rows from any dependent associations, and clear out join tables for BelongsToMany associations." />
      <item value="inheritDoc" />
      <item value="inherit Doc" />
      <item value="If you need to set complex expressions as order conditions" />
      <item value="The alias for a single rule or multiple rules array" />
      <item value="Add a validation rule to ensure that a field contains a scalar." />
      <item value="Returns camelBacked version of an underscored string." />
      <item value="Set logs to different files so they don't have permission conflicts." />
      <item value="Gets a representation of the elements in the tree as a flat list where the keys are the primary key for the table and the values are the display field for the table. Values are prefixed to visually indicate relative depth in the tree." />
      <item value="Build the fixtures table schema from the fields property." />
      <item value="Test Fixture" />
      <item value="Constraints Interface" />
      <item value="Table Schema Aware Interface" />
      <item value="Dialect" />
      <item value="If secureAttributes is set, these HTML attributes will be merged into the hidden input tags generated for the Security Component. This is especially useful to set HTML5 attributes like 'form'." />
      <item value="Generates a hidden field with a security hash based on the fields used in the form." />
      <item value="identical" />
      <item value="verify" />
      <item value="get the maximum index value in the table." />
      <item value="Optionally, the stripped characters can also be specified using the charlist parameter." />
      <item value="Optionally, the stripped characters can also be specified using" />
      <item value="Fixture Strategy Interface" />
      <item value="Define fallback values for required constants and configuration. To customize constants and configuration remove this require and define the data required by your plugin here." />
      <item value="and define the data required by your plugin here." />
      <item value="To customize constants and configuration remove this require" />
      <item value="Define fallback values for required constants and configuration." />
      <item value="Constraints" />
      <item value="legacy fixtures are managed by FixtureInjector" />
      <item value="4.3.0 Disabling auto-fixtures is deprecated and only available using FixtureInjector fixture system." />
      <item value="Disabling auto-fixtures is deprecated and only available using FixtureInjector fixture system" />
      <item value="incorrect" />
      <item value="This method will by default persist entities belonging to associated tables, whenever a dirty property matching the name of the property name set for an association in this table. It is possible to control what associations will be saved and to pass additional option for saving them." />
      <item value="When merging HasMany or BelongsToMany associations, all the entities in the `data` array will appear, those that can be matched by primary key will get the data merged, but those that cannot, will be discarded." />
      <item value="You can limit fields that will be present in the merged entity by passing the `fields` option, which is also accepted for associations:" />
      <item value="The data to prepare" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="ENGLISH" value="80" />
        <entry key="JAPANESE" value="79" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1669855452194" />
  </component>
</application>